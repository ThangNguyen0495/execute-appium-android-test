name: 'Android Appium Workflow Action'
description: 'Custom GitHub Action to run Appium tests with Maven.'
inputs:
  java_version:
    description: 'The version of Java to install.'
    required: false
    default: '22'

  node_version:
    description: 'The version of NodeJS to install.'
    required: false
    default: '21'

  artifact:
    description: 'The artifact to download. That is the test source code.'
    required: false

  test_config:
    description: 'The test configuration file to use.'
    required: false

  test_name:
    description: 'The name of the test suite.'
    required: true

  branch_name:
    description: 'The branch name to switch to.'
    required: false

  appium_port:
    description: 'The port on which the Appium server should run.'
    required: false
    default: '4723'

  scripts:
    description: 'The maven commands to execute the test.'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Download artifact
      if: ${{ inputs.artifact != '' }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact}}
        path: CheckoutFolder

    - name: Switch to another branch
      if: ${{ inputs.branch_name != '' }}
      run: |
        cd CheckoutFolder
        git checkout ${{ inputs.branch_name }}
      shell: bash

    - name: Checkout code
      if: ${{ inputs.artifact == '' }}
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ inputs.java_version }}

    - name: Install FFmpeg
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update > /dev/null 2>&1
        sudo apt-get install -y ffmpeg > /dev/null 2>&1
      shell: bash

    - name: Install FFmpeg
      if: runner.os == 'macOS'
      run: brew install ffmpeg > /dev/null 2>&1
      shell: bash

    - name: Create and start emulator
      uses: ThangNguyen0495/create-android-emulator@v1.0.0

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}

    - name: Install Appium
      run: npm install -g appium > /dev/null 2>&1
      shell: bash

    - name: Install UIAutomator2 driver
      run: appium driver install uiautomator2 > /dev/null 2>&1
      shell: bash

    - name: Start Appium server
      run: |
        nohup appium -a 0.0.0.0 -p ${{ inputs.appium_port }} -pa /wd/hub > appium_log.txt 2>&1 & > /dev/null 2>&1
      shell: bash

    - name: Install dependencies
      run: |
        if [ "${{ inputs.artifact }}" != "" ]; then
          cd CheckoutFolder
        fi
        mvn install -DskipTests > /dev/null 2>&1
      shell: bash

    - name: Run Appium tests with Maven
      run: |
        if [ "${{ inputs.artifact }}" != "" ]; then
          cd CheckoutFolder
        fi
        if [ -z "${{ inputs.scripts }}" ]; then
          mvn test "-DsuiteFile=${{ inputs.test_config }}" "-Dudid=emulator-5554" "-DappiumPort=${{ inputs.appium_port }}"
        else
          # Ensure that the script is only run if it's not empty
          if [ -n "${{ inputs.scripts }}" ]; then
            ${!{ inputs.scripts }}
          fi
        fi
      shell: bash

    - name: Appium log
      if: always()
      run: cat appium_log.txt
      shell: bash

    - name: Upload Test Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Test Reports - ${{ inputs.test_name }}
        path: |
          **/target/BufferLog.log
          **/target/ExtentReport.html
          **/recording_video

    - name: Remove cloned repo
      if: ${{ inputs.artifact != '' }}
      run: |
        rm -r CheckoutFolder
      shell: bash